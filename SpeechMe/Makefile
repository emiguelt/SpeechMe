# ==============================================================================
# Generated by qmake (2.01a) (Qt 4.7.0) on: Lun 31. Ene 23:35:57 2011
# This file is generated by qmake and should not be modified by the
# user.
#  Name        : C:/sphinx/SpeechMe//Makefile
#  Description : Wrapper Makefile for calling Symbian build tools
#
# ==============================================================================


MAKEFILE          = Makefile
QMAKE             = c:\Qt\4.7.0\bin\qmake.exe
DEL_FILE          = del 2> NUL
DEL_DIR           = rmdir
MOVE              = move
CHK_DIR_EXISTS    = if not exist
MKDIR             = mkdir
XCOPY             = xcopy /d /f /h /r /y /i
ABLD              = ABLD.BAT
DEBUG_PLATFORMS   = winscw gcce armv5 armv6
RELEASE_PLATFORMS = gcce armv5 armv6
MAKE              = make

ifeq (WINS,$(findstring WINS, $(PLATFORM)))
ZDIR=$(EPOCROOT)epoc32\release\$(PLATFORM)\$(CFG)\z
else
ZDIR=$(EPOCROOT)epoc32\data\z
endif

DEFINES	 = -DSYMBIAN -DUNICODE -DQT_KEYPAD_NAVIGATION -DQT_SOFTKEYS_ENABLED -DQT_USE_MATH_H_FLOATS -DQT_WEBKIT_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB
INCPATH	 =  -I"C:/Qt/4.7.0/include/QtCore" -I"C:/Qt/4.7.0/include/QtCore/tmp" -I"C:/Qt/4.7.0/include/QtNetwork" -I"C:/Qt/4.7.0/include/QtNetwork/tmp" -I"C:/Qt/4.7.0/include/QtGui" -I"C:/Qt/4.7.0/include/QtGui/tmp" -I"C:/Qt/4.7.0/include/QtWebKit" -I"C:/Qt/4.7.0/include/QtWebKit/tmp" -I"C:/Qt/4.7.0/include" -I"C:/Qt/4.7.0/include/tmp" -I"C:/Qt/4.7.0/mkspecs/common/symbian" -I"C:/Qt/4.7.0/mkspecs/common/symbian/tmp" -I"C:/S60/devices/Nokia_N97_SDK_v1.0/epoc32/include" -I"C:/S60/devices/Nokia_N97_SDK_v1.0/epoc32/include/osextensions/stdapis" -I"C:/S60/devices/Nokia_N97_SDK_v1.0/epoc32/include/osextensions/stdapis/sys" -I"C:/S60/devices/Nokia_N97_SDK_v1.0/epoc32/include/stdapis" -I"C:/S60/devices/Nokia_N97_SDK_v1.0/epoc32/include/stdapis/sys" -I"C:/sphinx/pocketsphinx/include" -I"C:/sphinx/pocketsphinx/include/tmp" -I"C:/sphinx/sphinxbase/include/s60" -I"C:/sphinx/sphinxbase/include/s60/tmp" -I"C:/sphinx/sphinxbase/include/sphinxbase" -I"C:/sphinx/sphinxbase/include/sphinxbase/tmp" -I"C:/sphinx/sphinxbase/include" -I"C:/sphinx/sphinxbase/include/tmp" -I"C:/sphinx/msrs/inc" -I"C:/sphinx/msrs/inc/tmp" -I"C:/S60/devices/Nokia_N97_SDK_v1.0/epoc32/include/osextensions/stdapis/stlport" -I"C:/S60/devices/Nokia_N97_SDK_v1.0/epoc32/include/stdapis/stlport" -I"C:/Qt/4.7.0/include/QtXmlPatterns" -I"C:/Qt/4.7.0/include/QtXmlPatterns/tmp" -I"C:/S60/devices/Nokia_N97_SDK_v1.0/epoc32/include/oem" -I"C:/S60/devices/Nokia_N97_SDK_v1.0/epoc32/include/middleware" -I"C:/S60/devices/Nokia_N97_SDK_v1.0/epoc32/include/domain/middleware" -I"C:/S60/devices/Nokia_N97_SDK_v1.0/epoc32/include/osextensions" -I"C:/S60/devices/Nokia_N97_SDK_v1.0/epoc32/include/domain/osextensions" -I"C:/S60/devices/Nokia_N97_SDK_v1.0/epoc32/include/domain/osextensions/loc" -I"C:/S60/devices/Nokia_N97_SDK_v1.0/epoc32/include/domain/middleware/loc" -I"C:/S60/devices/Nokia_N97_SDK_v1.0/epoc32/include/domain/osextensions/loc/sc" -I"C:/S60/devices/Nokia_N97_SDK_v1.0/epoc32/include/domain/middleware/loc/sc" -I"C:/sphinx/SpeechMe" -I"C:/sphinx/SpeechMe/tmp" -I"C:/sphinx/SpeechMe/inc" -I"C:/sphinx/SpeechMe/inc/tmp" -I"C:/sphinx/SpeechMe/src" -I"C:/sphinx/SpeechMe/src/tmp"
first: default
default: debug-winscw
all: debug release

qmake:
	$(QMAKE) "C:/sphinx/SpeechMe/SpeechMe.pro"  -spec ..\..\Qt\4.7.0\mkspecs\symbian-abld

bld.inf: C:/sphinx/SpeechMe/SpeechMe.pro
	$(QMAKE) "C:/sphinx/SpeechMe/SpeechMe.pro"  -spec ..\..\Qt\4.7.0\mkspecs\symbian-abld

$(ABLD): bld.inf
	bldmake bldfiles

debug: $(ABLD)
	$(ABLD) build winscw udeb
	$(ABLD) build gcce udeb
	$(ABLD) build armv5 udeb
	$(ABLD) build armv6 udeb

release: $(ABLD)
	$(ABLD) build gcce urel
	$(ABLD) build armv5 urel
	$(ABLD) build armv6 urel

debug-winscw: $(ABLD)
	$(ABLD) build winscw udeb
debug-gcce: $(ABLD)
	$(ABLD) build gcce udeb
debug-armv5: $(ABLD)
	$(ABLD) build armv5 udeb
debug-armv6: $(ABLD)
	$(ABLD) build armv6 udeb
release-gcce: $(ABLD)
	$(ABLD) build gcce urel
release-armv5: $(ABLD)
	$(ABLD) build armv5 urel
release-armv6: $(ABLD)
	$(ABLD) build armv6 urel

export: $(ABLD)
	$(ABLD) export

cleanexport: $(ABLD)
	$(ABLD) cleanexport

check: first

run:
	call /S60/devices/Nokia_N97_SDK_v1.0/epoc32/release/winscw/udeb/SpeechMe.exe $(QT_RUN_OPTIONS)

runonphone: sis
	runonphone $(QT_RUN_ON_PHONE_OPTIONS) --sis SpeechMe.sis SpeechMe.exe $(QT_RUN_OPTIONS)

sis:
	$(if $(wildcard SpeechMe_template.pkg), $(if $(wildcard .make.cache), $(MAKE) -f $(MAKEFILE) ok_sis MAKEFILES=.make.cache , $(if $(QT_SIS_TARGET), $(MAKE) -f $(MAKEFILE) ok_sis , $(MAKE) -f $(MAKEFILE) fail_sis_nocache ) ) , $(MAKE) -f $(MAKEFILE) fail_sis_nopkg )

ok_sis:
	createpackage.bat $(QT_SIS_OPTIONS) SpeechMe_template.pkg $(QT_SIS_TARGET) $(QT_SIS_CERTIFICATE) $(QT_SIS_KEY) $(QT_SIS_PASSPHRASE)

unsigned_sis:
	$(if $(wildcard SpeechMe_template.pkg), $(if $(wildcard .make.cache), $(MAKE) -f $(MAKEFILE) ok_unsigned_sis MAKEFILES=.make.cache , $(if $(QT_SIS_TARGET), $(MAKE) -f $(MAKEFILE) ok_unsigned_sis , $(MAKE) -f $(MAKEFILE) fail_sis_nocache ) ) , $(MAKE) -f $(MAKEFILE) fail_sis_nopkg )

ok_unsigned_sis:
	createpackage.bat $(QT_SIS_OPTIONS) -o SpeechMe_template.pkg $(QT_SIS_TARGET)

SpeechMe.sis:
	$(MAKE) -f $(MAKEFILE) sis

installer_sis: SpeechMe.sis
	$(if $(wildcard SpeechMe_installer.pkg), $(MAKE) -f $(MAKEFILE) ok_installer_sis , $(MAKE) -f $(MAKEFILE) fail_sis_nopkg )

ok_installer_sis:
	createpackage.bat $(QT_SIS_OPTIONS) SpeechMe_installer.pkg - $(QT_SIS_CERTIFICATE) $(QT_SIS_KEY) $(QT_SIS_PASSPHRASE)

fail_sis_nopkg:
	$(error PKG file does not exist, 'sis' and 'installer_sis' target are only supported for executables or projects with DEPLOYMENT statement)

fail_sis_nocache:
	$(error Project has to be built or QT_SIS_TARGET environment variable has to be set before calling 'SIS' target)

stub_sis:
	$(if $(wildcard SpeechMe_template.pkg), $(if $(wildcard .make.cache), $(MAKE) -f $(MAKEFILE) ok_stub_sis MAKEFILES=.make.cache , $(if $(QT_SIS_TARGET), $(MAKE) -f $(MAKEFILE) ok_stub_sis , $(MAKE) -f $(MAKEFILE) fail_sis_nocache ) ) , $(MAKE) -f $(MAKEFILE) fail_sis_nopkg )

ok_stub_sis:
	createpackage.bat -s $(QT_SIS_OPTIONS) SpeechMe_stub.pkg $(QT_SIS_TARGET) $(QT_SIS_CERTIFICATE) $(QT_SIS_KEY) $(QT_SIS_PASSPHRASE)

store_build:
	@echo # ============================================================================== > .make.cache && echo # This file is generated by make and should not be modified by the user >> .make.cache && echo # Name : .make.cache >> .make.cache && echo # Part of : lineedits >> .make.cache && echo # Description : This file is used to cache last build target for >> .make.cache && echo # make sis target. >> .make.cache && echo # Version : >> .make.cache && echo # >> .make.cache && echo # ============================================================================== >> .make.cache && echo. >> .make.cache && echo QT_SIS_TARGET ?= $(QT_SIS_TARGET) >> .make.cache

deploy: sis
	call SpeechMe.sis

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_SpeechMe.cpp moc_ConfigUi.cpp moc_speechpad.cpp moc_speechremote.cpp moc_RemoteClient.cpp moc_speechweb.cpp moc_decoderthread.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_SpeechMe.cpp moc_ConfigUi.cpp moc_speechpad.cpp moc_speechremote.cpp moc_RemoteClient.cpp moc_speechweb.cpp moc_decoderthread.cpp
moc_SpeechMe.cpp: inc\Configuration.h \
		ui_SpeechMe2.h \
		inc\speechremote.h \
		inc\RemoteClient.h \
		inc\SpeechMe.h
	C:\Qt\4.7.0\bin\moc.exe $(DEFINES) $(INCPATH) -DSYMBIAN inc\SpeechMe.h -o moc_SpeechMe.cpp

moc_ConfigUi.cpp: ui_config.h \
		inc\SpeechMe.h \
		inc\Configuration.h \
		ui_SpeechMe2.h \
		inc\speechremote.h \
		inc\RemoteClient.h \
		inc\ConfigUi.h
	C:\Qt\4.7.0\bin\moc.exe $(DEFINES) $(INCPATH) -DSYMBIAN inc\ConfigUi.h -o moc_ConfigUi.cpp

moc_speechpad.cpp: inc\SpeechMe.h \
		inc\Configuration.h \
		ui_SpeechMe2.h \
		inc\speechremote.h \
		inc\RemoteClient.h \
		inc\speechpad.h
	C:\Qt\4.7.0\bin\moc.exe $(DEFINES) $(INCPATH) -DSYMBIAN inc\speechpad.h -o moc_speechpad.cpp

moc_speechremote.cpp: inc\RemoteClient.h \
		inc\speechremote.h
	C:\Qt\4.7.0\bin\moc.exe $(DEFINES) $(INCPATH) -DSYMBIAN inc\speechremote.h -o moc_speechremote.cpp

moc_RemoteClient.cpp: inc\RemoteClient.h
	C:\Qt\4.7.0\bin\moc.exe $(DEFINES) $(INCPATH) -DSYMBIAN inc\RemoteClient.h -o moc_RemoteClient.cpp

moc_speechweb.cpp: inc\SpeechMe.h \
		inc\Configuration.h \
		ui_SpeechMe2.h \
		inc\speechremote.h \
		inc\RemoteClient.h \
		inc\speechweb.h
	C:\Qt\4.7.0\bin\moc.exe $(DEFINES) $(INCPATH) -DSYMBIAN inc\speechweb.h -o moc_speechweb.cpp

moc_decoderthread.cpp: inc\decoderthread.h
	C:\Qt\4.7.0\bin\moc.exe $(DEFINES) $(INCPATH) -DSYMBIAN inc\decoderthread.h -o moc_decoderthread.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_config.h ui_speechpad.h ui_speechweb.h ui_SpeechMe2.h
compiler_uic_clean:
	-$(DEL_FILE) ui_config.h ui_speechpad.h ui_speechweb.h ui_SpeechMe2.h
ui_config.h: ui\config.ui
	c:\Qt\4.7.0\bin\uic.exe ui\config.ui -o ui_config.h

ui_speechpad.h: ui\speechpad.ui
	c:\Qt\4.7.0\bin\uic.exe ui\speechpad.ui -o ui_speechpad.h

ui_speechweb.h: ui\speechweb.ui
	c:\Qt\4.7.0\bin\uic.exe ui\speechweb.ui -o ui_speechweb.h

ui_SpeechMe2.h: ui\SpeechMe2.ui
	c:\Qt\4.7.0\bin\uic.exe ui\SpeechMe2.ui -o ui_SpeechMe2.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

create_temps:
	-@ if not exist "C:\Qt\4.7.0\include\QtCore\tmp" mkdir "C:\Qt\4.7.0\include\QtCore\tmp"
	-@ if not exist "C:\Qt\4.7.0\include\QtNetwork\tmp" mkdir "C:\Qt\4.7.0\include\QtNetwork\tmp"
	-@ if not exist "C:\Qt\4.7.0\include\QtGui\tmp" mkdir "C:\Qt\4.7.0\include\QtGui\tmp"
	-@ if not exist "C:\Qt\4.7.0\include\QtWebKit\tmp" mkdir "C:\Qt\4.7.0\include\QtWebKit\tmp"
	-@ if not exist "C:\Qt\4.7.0\include\tmp" mkdir "C:\Qt\4.7.0\include\tmp"
	-@ if not exist "C:\Qt\4.7.0\mkspecs\common\symbian\tmp" mkdir "C:\Qt\4.7.0\mkspecs\common\symbian\tmp"
	-@ if not exist "C:\sphinx\pocketsphinx\include\tmp" mkdir "C:\sphinx\pocketsphinx\include\tmp"
	-@ if not exist "C:\sphinx\sphinxbase\include\s60\tmp" mkdir "C:\sphinx\sphinxbase\include\s60\tmp"
	-@ if not exist "C:\sphinx\sphinxbase\include\sphinxbase\tmp" mkdir "C:\sphinx\sphinxbase\include\sphinxbase\tmp"
	-@ if not exist "C:\sphinx\sphinxbase\include\tmp" mkdir "C:\sphinx\sphinxbase\include\tmp"
	-@ if not exist "C:\sphinx\msrs\inc\tmp" mkdir "C:\sphinx\msrs\inc\tmp"
	-@ if not exist "C:\Qt\4.7.0\include\QtXmlPatterns\tmp" mkdir "C:\Qt\4.7.0\include\QtXmlPatterns\tmp"
	-@ if not exist "C:\sphinx\SpeechMe\tmp" mkdir "C:\sphinx\SpeechMe\tmp"
	-@ if not exist "C:\sphinx\SpeechMe\inc\tmp" mkdir "C:\sphinx\SpeechMe\inc\tmp"
	-@ if not exist "C:\sphinx\SpeechMe\src\tmp" mkdir "C:\sphinx\SpeechMe\src\tmp"

extension_clean: compiler_clean
	-@ if EXIST "C:\Qt\4.7.0\include\QtCore\tmp" rmdir /s /q  "C:\Qt\4.7.0\include\QtCore\tmp"
	-@ if EXIST "C:\Qt\4.7.0\include\QtNetwork\tmp" rmdir /s /q  "C:\Qt\4.7.0\include\QtNetwork\tmp"
	-@ if EXIST "C:\Qt\4.7.0\include\QtGui\tmp" rmdir /s /q  "C:\Qt\4.7.0\include\QtGui\tmp"
	-@ if EXIST "C:\Qt\4.7.0\include\QtWebKit\tmp" rmdir /s /q  "C:\Qt\4.7.0\include\QtWebKit\tmp"
	-@ if EXIST "C:\Qt\4.7.0\include\tmp" rmdir /s /q  "C:\Qt\4.7.0\include\tmp"
	-@ if EXIST "C:\Qt\4.7.0\mkspecs\common\symbian\tmp" rmdir /s /q  "C:\Qt\4.7.0\mkspecs\common\symbian\tmp"
	-@ if EXIST "C:\sphinx\pocketsphinx\include\tmp" rmdir /s /q  "C:\sphinx\pocketsphinx\include\tmp"
	-@ if EXIST "C:\sphinx\sphinxbase\include\s60\tmp" rmdir /s /q  "C:\sphinx\sphinxbase\include\s60\tmp"
	-@ if EXIST "C:\sphinx\sphinxbase\include\sphinxbase\tmp" rmdir /s /q  "C:\sphinx\sphinxbase\include\sphinxbase\tmp"
	-@ if EXIST "C:\sphinx\sphinxbase\include\tmp" rmdir /s /q  "C:\sphinx\sphinxbase\include\tmp"
	-@ if EXIST "C:\sphinx\msrs\inc\tmp" rmdir /s /q  "C:\sphinx\msrs\inc\tmp"
	-@ if EXIST "C:\Qt\4.7.0\include\QtXmlPatterns\tmp" rmdir /s /q  "C:\Qt\4.7.0\include\QtXmlPatterns\tmp"
	-@ if EXIST "C:\sphinx\SpeechMe\tmp" rmdir /s /q  "C:\sphinx\SpeechMe\tmp"
	-@ if EXIST "C:\sphinx\SpeechMe\inc\tmp" rmdir /s /q  "C:\sphinx\SpeechMe\inc\tmp"
	-@ if EXIST "C:\sphinx\SpeechMe\src\tmp" rmdir /s /q  "C:\sphinx\SpeechMe\src\tmp"

pre_targetdeps: \
	generated_sources \
	all_source_deps \
	ui_config.h \
	ui_speechpad.h \
	ui_speechweb.h \
	ui_SpeechMe2.h

generated_sources: \
	moc_SpeechMe.cpp \
	moc_ConfigUi.cpp \
	moc_speechpad.cpp \
	moc_speechremote.cpp \
	moc_RemoteClient.cpp \
	moc_speechweb.cpp \
	moc_decoderthread.cpp

all_source_deps: \
	inc\speechpad.h \
	inc\SpeechMe.h \
	inc\Configuration.h \
	ui_SpeechMe2.h \
	inc\speechremote.h \
	inc\RemoteClient.h \
	ui_speechpad.h \
	inc\speechweb.h \
	ui_speechweb.h \
	inc\decoderthread.h

finalize:

winscw_deployment:

winscw_deployment_clean:

deployment:

deployment_clean:

dodistclean:
	-@ if EXIST "c:\sphinx\SpeechMe\SpeechMe_template.pkg" $(DEL_FILE)  "c:\sphinx\SpeechMe\SpeechMe_template.pkg"
	-@ if EXIST "c:\sphinx\SpeechMe\SpeechMe_stub.pkg" $(DEL_FILE)  "c:\sphinx\SpeechMe\SpeechMe_stub.pkg"
	-@ if EXIST "c:\sphinx\SpeechMe\SpeechMe_installer.pkg" $(DEL_FILE)  "c:\sphinx\SpeechMe\SpeechMe_installer.pkg"
	-@ if EXIST "c:\sphinx\SpeechMe\Makefile" $(DEL_FILE)  "c:\sphinx\SpeechMe\Makefile"
	-@ if EXIST "c:\sphinx\SpeechMe\Makefile_0xEE74B26E.mk" $(DEL_FILE)  "c:\sphinx\SpeechMe\Makefile_0xEE74B26E.mk"
	-@ if EXIST "c:\sphinx\SpeechMe\SpeechMe_0xEE74B26E.mmp" $(DEL_FILE)  "c:\sphinx\SpeechMe\SpeechMe_0xEE74B26E.mmp"
	-@ if EXIST "c:\sphinx\SpeechMe\SpeechMe_reg.rss" $(DEL_FILE)  "c:\sphinx\SpeechMe\SpeechMe_reg.rss"
	-@ if EXIST "c:\sphinx\SpeechMe\SpeechMe.rss" $(DEL_FILE)  "c:\sphinx\SpeechMe\SpeechMe.rss"
	-@ if EXIST "c:\sphinx\SpeechMe\SpeechMe.loc" $(DEL_FILE)  "c:\sphinx\SpeechMe\SpeechMe.loc"
	-@ if EXIST "c:\sphinx\SpeechMe\bld.inf" $(DEL_FILE)  "c:\sphinx\SpeechMe\bld.inf"

distclean: clean dodistclean

clean: $(ABLD)
	-$(ABLD) reallyclean
	-bldmake clean

clean-debug: $(ABLD)
	$(ABLD) reallyclean winscw udeb
	$(ABLD) reallyclean gcce udeb
	$(ABLD) reallyclean armv5 udeb
	$(ABLD) reallyclean armv6 udeb

clean-release: $(ABLD)
	$(ABLD) reallyclean gcce urel
	$(ABLD) reallyclean armv5 urel
	$(ABLD) reallyclean armv6 urel

clean-debug-winscw: $(ABLD)
	$(ABLD) reallyclean winscw udeb
clean-debug-gcce: $(ABLD)
	$(ABLD) reallyclean gcce udeb
clean-debug-armv5: $(ABLD)
	$(ABLD) reallyclean armv5 udeb
clean-debug-armv6: $(ABLD)
	$(ABLD) reallyclean armv6 udeb
clean-release-gcce: $(ABLD)
	$(ABLD) reallyclean gcce urel
clean-release-armv5: $(ABLD)
	$(ABLD) reallyclean armv5 urel
clean-release-armv6: $(ABLD)
	$(ABLD) reallyclean armv6 urel

